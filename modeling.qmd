---
title: "Oaxaca Isoscape"
format: html
editor: visual
---

## Setup

Load required packages.

```{r}
library(stars)
library(sf)
library(tidyverse)
library(readxl)
library(rnaturalearth)

library(tidymodels)
library(spatialsample)
library(future)
library(bonsai)
library(lightgbm)
library(vip)

plan(multisession) # use all available cores for parallel processing
```

### Preprocess Global Raster Predictors

extents are the same, but its the resolution that doesn't match

vars 2 and 3 are multi resolution? its from lc and age_min. or all the age_min/max srsq layers in vars3? but they all read as having the same resolution when checking dimensions

looks like everything but vars3 is the same projection, just not necessarily named that? and why does vars3 then need to be reprojected? ah its listed as world eckertIV rather than just eckert IV

```{r}
vars1 <- list.files('data/data-raw/isotope_predictors', pattern = 'reproj', full.names = TRUE)[c(3:4, 6:9, 11:12, 21:22)] |>
  read_stars() %>%
  setNames(., str_remove(names(.), '_reproj.tif'))

eck4 <- st_crs(vars1)

vars2 <- list.files('data/data-raw/isotope_predictors', pattern = 'reproj', full.names = TRUE)[-c(3:4, 6:9, 11:12, 21:22)] %>%
  .[-5] |> # remove lc for now to test resolution issue
  read_stars()  %>%
  setNames(., str_remove(names(.), '_reproj.tif')) |>
  select(-lc) |>
  st_set_crs(eck4)

vars3 <- list.files('data/data-raw/isotope_predictors', pattern = '\\.tif$', full.names = TRUE) %>%
  str_subset('reproj', negate = TRUE) %>%
  .[c(1:2, 32:34, 39)] %>%
    .[c(1:2, 4:5)] |>
  read_stars() %>%
  setNames(., str_remove(names(.), '.tif')) |>
  st_set_crs(eck4)

vars4 <- list.files('data/data-raw/isotope_predictors', pattern = '^r.', full.names = TRUE) %>%
  .[-c(26, 28:32)] |>
  read_stars() %>%
  setNames(., str_remove(names(.), '.tif')) |>
  st_set_crs(eck4)

predictors <- c(vars1, vars2, vars3, vars4) |>
  select(-magt, -perma) # incomplete variables? # also, this doesn't seem to remove them?
```


```{r}
oaxaca_bbox <- st_bbox(c(xmin = -98, xmax = -95, ymin = 16, ymax = 18), crs = 4326) |>
  st_transform(eck4) 

world <- ne_countries() |>
  st_transform(eck4)

oaxaca_predictors <- st_crop(c(vars1, vars2, vars4), oaxaca_bbox) |>
  st_as_stars() |>
  c(st_as_stars(st_crop(vars3, oaxaca_bbox))) |>
  select(-magt, -perma) # incomplete variables?
```

```{r}
plot(merge(oaxaca_predictors), join_zlim = TRUE)
```

### Preprocess Global Isotope Observations

```{r}
pts <- read_excel('data/data-raw/1-s2.0-S0031018220302947-mmc1.xlsx', sheet = 2, guess_max = 100000) |>
  mutate(Sr = str_replace(`87Sr/86Sr`, ',', '.'),
         Sr = parse_number(Sr)) |>
  filter(Sr <= 0.75) |> # confirm with sofia or look at types more critically
  select(Sr, Longitude, Latitude, type = `Type 1`) |> # keep Type 1 and 2 and Material?
  mutate(type = if_else(type == 'water', 'Water', type),
         type = if_else(type == 'mammal', 'Mammal', type)) |>
  filter(type %in% c('Plant', 'Mammal', 'Water', 'Invertebrates', 'Minerals', 'Rock')) |>
  remove_missing() |> # some rows don't have Sr measurements
  st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) |>
  st_transform(eck4)
```

```{r}
ggplot(pts) +
  geom_sf(data = st_as_sfc(world), color = 'lightgrey') + # so type doesn't get invovled
  geom_sf(aes(color = type), alpha = 0.5, size = .1) +
  theme_bw() +
  facet_wrap(~type)
```
```{r}
ggplot(pts) +
  geom_bar(aes(type)) +
  theme_bw() +
  coord_flip()
```

```{r}
ggplot(pts) +
  geom_histogram(aes(sr)) +
  theme_bw()

pts |>
  arrange(sr) |>
ggplot() +
  geom_sf(data = world, color = 'lightgrey') +
  geom_sf(aes(color = sr), size = 0.1) +
  scale_color_viridis_c() +
  theme_bw()
```

### Preprocess Oaxaca Isotope Observations

```{r}
iso <- read_excel('data/data-raw/OAX Sr Result Table.xlsx') %>%
  st_as_sf(coords = c('UTM-E', 'UTM-N'), crs = 32614) |>
  st_transform(eck4) |>
  rename(elevation = `Elevation (masl)`,
         rooting_depth = `Plant Rooting Depth`)
```


### Final Data for Modeling

```{r}
pts_combined <- iso |>
  select(Sr) |>
  mutate(type = 'oaxaca_test') |>
  bind_rows(pts)

dat <- predictors |>
  st_extract(pts_combined) |>
  mutate(Sr = pts_combined$Sr,
         type = factor(pts_combined$type)) |>
  select(-magt, -perma, # because not removed from rasters
         -c(ph, cec, clay, bulk, soc, nitrogen, ocd, ocs, w0010_30, w0010, w0033, w1500)) |> # remove soil variables 
  remove_missing()# only necessary for rf
```

```{r}
saveRDS(dat, 'data/data-derived/oaxaca_dat.rds')
saveRDS(oaxaca_predictors, 'data/data-derived/oaxaca_predictors.rds')
```


## Modeling

```{r}
set.seed(1111)

splits <- make_splits(x = list(analysis = which(dat$type != 'oaxaca_test'),
                      assessment = which(dat$type == 'oaxaca_test')),
                      data = dat)
train <- training(splits)                      
#folds <- spatial_clustering_cv(dat, v = 8)
folds <- spatial_block_cv(train, repeats = 6)
#folds <- vfold_cv(dat, v = 5)
autoplot(folds)
```

```{r}
rf_mod <- rand_forest(mode = 'regression',
                      mtry = tune(),
                      min_n = tune()) #|>
 # set_engine('ranger', importance = 'permutation')

rec <- recipe(Sr ~ ., train) |>
  update_role(c(type, geometry), new_role = 'other') |>
  update_role_requirements('other', bake = FALSE)

boost_mod <- boost_tree(mode = 'regression', 
                        mtry = tune(), 
                        trees = tune(), 
                        tree_depth = tune(), 
                        learn_rate = tune(), 
                        loss_reduction = tune(), 
                        min_n = tune()) |>
  set_engine('lightgbm', 
             #importance = 'permutation', 
             num_leaves = tune())

#bart_mod <- bart(mode = 'regression', 
#             trees = tune(),
#             prior_terminal_node_coef = tune(),
#             prior_terminal_node_expo = tune(),
#             prior_outcome_range = tune())
  
rf_wflw <- workflow(rec, spec = rf_mod)
boost_wflw <- workflow(rec, spec = boost_mod) 

#bart_wflw <- workflow(sr ~ ., spec = bart_mod)

rf_params <- extract_parameter_set_dials(rf_wflw) |>
  update(mtry = mtry(range = c(1, 20)))

boost_params <- extract_parameter_set_dials(boost_wflw) |>
  update(loss_reduction = loss_reduction(range = c(-10, -4)),
         learn_rate = learn_rate(range = c(-3, -1)))

control <- control_grid(pkgs = 'sf') # needed for parallel processing when geometry columns present

resamp_rf <- tune_grid(rf_wflw, folds, 
                       grid = 40, 
                       param_info = rf_params,
                       control = control)

resamp_boost <- tune_grid(boost_wflw, folds, 
                          grid = 200, 
                          param_info = boost_params, 
                          control = control)
#resamp_bart <- tune_grid(bart_wflw, folds, grid = 30, control = control)
```

.0031
```{r}
autoplot(resamp_rf)
```

```{r}
autoplot(resamp_boost)
```

```{r}
autoplot(resamp_bart)
```

```{r}
select_best(resamp)
select_best(resamp_boost)
#select_best(resamp_bart)
```

```{r}
boost_final <- boost_mod |>
  set_engine('lightgbm', importance = 'permutation') %>% # add in permutation importance
  update_model(boost_wflw, .) |>
  finalize_workflow(select_best(resamp_boost, metric = 'rmse')) |>
  last_fit(splits) 

rf_final <- rf_mod |>
  set_engine('ranger', importance = 'permutation') %>% # add in permutation importance
  update_model(rf_wflw, .) |>
  finalize_workflow(select_best(resamp_rf, metric = 'rmse')) |>
  last_fit(splits)
```
```{r}
collect_metrics(boost_final)
collect_metrics(rf_final)
```

```{r}
vip(extract_fit_engine(final_fit), num_features = 60)
vip(extract_fit_engine(base_fit), num_features = 60)
```
```{r}
augment(final_fit, dat) %>%
  ggplot(aes(sr, .pred)) +
  geom_point(aes(color = type), size = 0.4, alpha = 0.5) +
  geom_abline() +
  coord_equal() +
  theme_bw()

augment(base_fit, dat) %>%
  ggplot(aes(sr, .pred)) +
  geom_point(aes(color = type), size = 0.4, alpha = 0.5) +
  geom_abline() +
  coord_equal() +
  theme_bw()
```
# Testing on Oaxaca predictions

```{r}
oaxaca_predictions <- oaxaca_predictors |> 
  select(-c(ph, cec, clay, bulk, soc, nitrogen, ocd, ocs, w0010_30, w0010, w0033, w1500)) |>
           predict(final_fit)

```

```{r}
plot(merge(oaxaca_predictors) |> st_crop(st_bbox(iso)), join_zlim = TRUE)
```


```{r}
ggplot(iso) +
  geom_stars(data = oaxaca_predictions) +
  geom_sf() +
  scale_fill_viridis_c() +
  theme_bw()
```

```{r}
mapview::mapview(oaxaca_predictions) + mapview::mapview(iso)
```


```{r}
ggplot(iso, aes(Sr, .pred)) +
  geom_point(aes(color = Locality)) +
  geom_abline(color = 'red', linetype = 2) +
  theme_bw()

ggplot(iso, aes(Sr, .pred)) +
  geom_point(aes(color = `Plant Rooting Depth`)) +
    geom_abline(color = 'red', linetype = 2) +
  theme_bw()

ggplot(iso, aes(Sr, .pred)) +
  geom_point(aes(color = Species)) +
    geom_abline(color = 'red', linetype = 2) +
  theme_bw()
```

